# Copyright (C) 2021 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

import os

Import('env')
env = env.Clone()
if env['PROC'] == 'scorpion':
  env.Replace(LIB_OUT_DIR = '${BUILD_ROOT}/ssg/bsp/trustzone/qsapps/sampleta/build/${SHORT_BUILDPATH}')
else:
  env.Replace(LIB_OUT_DIR = '${BUILD_ROOT}/ssg/bsp/trustzone/qsapps/smplta64/build/${SHORT_BUILDPATH}')

env.Append(CCFLAGS = ' -DTEE_QSEE ')
#------------------------------------------------------------------------------
# We need to specify "neon" to generate SIMD instructions in 32-bit mode
#------------------------------------------------------------------------------

includes = ['#../../core/api/kernel/libstd/stringl',
            '#../../ssg/api/securemsm/trustzone/gp',
            '#../../ssg/securemsm/trustzone/qsapps/libs/applib/qsee/src',
            '#../../ssg/securemsm/trustzone/qsapps/libs/biometric/inc',
            '#../../ssg/securemsm/trustzone/qsee/mink/include',
            '#../../ssg/securemsm/trustzone/qsapps/common',
            './inc'
           ]

sources = [
        './src/app_main.c',
        './src/hw_core.c',
        './src/hw_driver.c',
        './platform/qsee.c',
]

deploy_sources = []
deploy_sources.extend(sources)

if env['PROC'] == 'scorpion':
  env.Append(CCFLAGS = " -mfpu=neon ")
  target_name = 'sampleta'
  uuid_name = '58616D70-6C65-4170-7000-000000000032'
else:
  target_name = 'smplta64'
  uuid_name = '58616D70-6C65-4170-7000-000000000064'

md = {
   'appName':    'fingerprint',
   'UUID':       uuid_name,
   'privileges': ['default',
                  'I2C',
                  'OEMUnwrapKeys',
                  'SPI',
                  'SPCOM',
                  'TLMM',
                  'OEMBuf',
                 ],
  'heapSize': 0x2B0000,
  'storageFilesNoPersist': True,
  'totalStorageFiles': 2000
}

if env['PROC'] == 'scorpion':
  md['memoryType'] = 'Unprotected'

s_units = env.SecureAppBuilder(
  sources = sources,
  includes = includes,
  metadata = md,
  image = target_name,
  deploy_sources = deploy_sources + ['SConscript'],
  deploy_variants = env.GetDefaultPublicVariants()
)

op = env.Alias(target_name, s_units)
